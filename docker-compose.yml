version: '3.8'

services:
  web:
    # Билд образа для продакшена
    build:
       context: .
       dockerfile: dockerfiles/python.dockerfile
    container_name: depl_gunicorn
    restart: unless-stopped
    command: gunicorn app.wsgi:application --bind 0.0.0.0:8000
    # Открываем порт 8000 наружу
    expose:
      - 8000
    # Подключаем статические и медиа файлы
    volumes:
      - static_volume:/home/app/web/static
      - media_volume:/home/app/web/media
    # Файл с переменными, которые будут использоваться
    # в основном в setting.py
    env_file:
      - .env
    # Дожидаемся запуска db
    depends_on:
      - db
  db:
    image: postgres
    # Том, куда будут сохранятся данные базы
    container_name: depl_postgres
    restart: unless-stopped
    volumes:
      - postgres_volume:/var/lib/postgresql/data/
    # Переменные, которые используются только postgre
    env_file:
      - .env.db
  nginx:
    build:
      context: ./dockerfiles
      dockerfile: nginx.dockerfile
    # Подключаем статические и медиа файлы
    container_name: depl_nginx
    restart: unless-stopped
    volumes:
      - static_volume:/home/app/web/static
      - media_volume:/home/app/web/media
    # Порт внешний/внутренний
    ports:
      - 80:80
    depends_on:
      - web

volumes:
  postgres_volume:
  static_volume:
  media_volume:
